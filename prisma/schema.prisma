generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business_owner {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String?       @db.Uuid
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model climate_project {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String        @db.VarChar(255)
  description     String?       @db.VarChar
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model environmental_impact {
  id                  String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  co2_emissions       Int
  biodiversity_impact Int
  organization_id     String?       @db.Uuid
  created_at          DateTime      @default(now()) @db.Timestamp(6)
  updated_at          DateTime      @default(now()) @db.Timestamp(6)
  organization        organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description          String?                @db.VarChar
  image                String?                @db.VarChar
  name                 String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  user_id              String                 @db.Uuid
  tenant_id            String                 @db.VarChar(255)
  business_owner       business_owner[]
  climate_project      climate_project[]
  environmental_impact environmental_impact[]
  user                 user                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  business_owner business_owner[]
  organization   organization[]
}
